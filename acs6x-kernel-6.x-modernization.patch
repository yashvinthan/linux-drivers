--- acs_ame.c.orig	2014-12-22 00:00:00.000000000 +0000
+++ acs_ame.c	2025-10-22 00:00:00.000000000 +0000
@@ -52,7 +52,7 @@
 #include <scsi/scsi_tcq.h>
 #include <scsi/scsi_device.h>
 #include <scsi/scsi_transport.h>
-#include "modern_kernel_compat.h"
+#include "compat.h"

 #include "acs_ame.h"

@@ -1754,9 +1754,17 @@
     /* Set DMA Mask */
     if (! pci_set_dma_mask(pdev, DMA_64BIT_MASK)) {
         pci_set_consistent_dma_mask(pdev, DMA_64BIT_MASK);
+        acs_adt->blIs64bit = TRUE;
+        DPRINTK("DMA: 64-bit capable\n");
     } else if (! pci_set_dma_mask(pdev, DMA_32BIT_MASK)) {
         pci_set_consistent_dma_mask(pdev, DMA_32BIT_MASK);
+        acs_adt->blIs64bit = FALSE;
+        DPRINTK("DMA: 32-bit fallback\n");
     } else {
         PRINTK("In %s error:  set_dma_mask fail.\n",__func__);
         err = -ENOMEM;
@@ -2313,7 +2321,7 @@
 static int __init acs_ame_init(void)
 {
     #if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,18)
-        ACS_class = class_create(THIS_MODULE, CHAR_DRIVER_NAME);
+        ACS_class = acs_class_create(CHAR_DRIVER_NAME);
     #endif
     return pci_register_driver(&pci_driver);
 }
--- acs_ame.h.orig	2014-12-22 00:00:00.000000000 +0000
+++ acs_ame.h	2025-10-22 00:00:00.000000000 +0000
@@ -1,6 +1,6 @@
 /************************************************************************
-*   ACS62000-08 and ACS_61000_XX Pci RAID card driver for linux
+*   ACS62000-08 and ACS61000-XX Pci RAID card driver for linux
 *
 *   Copyright (C) 2006 - 2014, Accusys Technology Inc. All rights reserved.
 *   E-mail: Sam_Chuang@accusys.com.tw
@@ -16,6 +16,9 @@
 **************************************************************************/

+/* Include compat layer for modern kernel (6.1+) support */
+#include "compat.h"
+
 /***************************************************************************
 *   Data type definition
 ****************************************************************************/
@@ -65,62 +68,6 @@
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(5,0,0)
     /* pci_get_bus_and_slot removed in 5.0, use pci_get_domain_bus_and_slot */
     #define acs_pci_get_bus(bus, devfn) \
             pci_get_domain_bus_and_slot(0, bus, devfn)
-#elif LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,19)
-    #define acs_pci_get_bus(bus, devfn) \
-            pci_get_bus_and_slot(bus, devfn)
-#else
-    #define acs_pci_get_bus(bus, devfn) \
-            pci_find_slot(bus, devfn)
-#endif
-
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,6)
-    #define acs_add_device(host, channel, target, lun) \
-            __scsi_add_device(host, channel, target, lun, NULL)
-#else
-    #define acs_add_device(host, channel, target, lun) \
-            scsi_add_device(host, channel, target, lun)
-#endif
-
-#if LINUX_VERSION_CODE == KERNEL_VERSION(2,6,9)
-    #define acs_put_device(TargeID_device) \
-            put_device(TargeID_device)
-#else
-    #define acs_put_device(TargeID_device) \
-            scsi_device_put(TargeID_device)
-#endif
-
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,27)
-    #define acs_device_create(class,parent,devt,fmt,CHAR_DRIVER_NAME,index) \
-                device_create(class,parent,devt,NULL,fmt,CHAR_DRIVER_NAME,index)
-#elif LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,18)
-    #define acs_device_create(class,parent,devt,fmt,CHAR_DRIVER_NAME,index) \
-                device_create(class,parent,devt,fmt,CHAR_DRIVER_NAME,index)
-#else
-    #define acs_device_create(class,parent,devt,fmt,CHAR_DRIVER_NAME,index) \
-
-#endif
-
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,18)
-    #define acs_device_destroy(class,devt) \
-                device_destroy(class,devt)
-#else
-    #define acs_device_destroy(class,devt) \
-
-#endif
-
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,20)
-    #define acs_request_irq(irq,handler,name,dev) \
-                request_irq(irq,handler,IRQF_SHARED,name,dev)
-#else
-    #define acs_request_irq(irq,handler,name,dev) \
-                request_irq(irq,handler,SA_INTERRUPT|SA_SHIRQ,name,dev)
+/* All API compat macros moved to compat.h */
 #endif
-

 #define PCI_NT_DEVICE(vend,dev,svend,sdev) \
